[project]
name = "whatsapp-legal-agent"
version = "0.1.0"
description = "WhatsApp Legal Agent with LLM Integration"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "langfuse>=2.33.1",
    "openai>=1.30.5",
    "langchain>=0.2.1",
    "llama-index>=0.10.42",
    "anthropic>=0.28.0",
    "colorama>=0.4.6",
    "fastapi>=0.111.0",
    "pydantic-settings>=2.2.1",
    "jupyter>=1.0.0",
    "sqlmodel>=0.0.18",
    "python-jose>=3.3.0",
    "python-dotenv>=1.0.1",
    "openpyxl>=3.1.3",
    "psycopg2>=2.9.9",
    "pydub>=0.25.1",
    "firebase-admin>=6.5.0",
    "gcloud>=0.18.3",
    "pycryptodomex>=3.20.0",
    "pycryptodome>=3.20.0",
    "uvicorn==0.30.1",
    "retry==0.9.2",
    "sse-starlette==1.8.2",
    "google-genai"
]

[project.scripts]
start = "uvicorn main:app --reload"
test = "pytest"
lint = "ruff check ."
format = "black ."

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.11.1",
    "black>=23.7.0",
    "ruff>=0.0.285",
    "mypy>=1.5.0",
    "pre-commit>=3.3.3",
]

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
]
ignore = ["E501"]  # line too long

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["."]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=domain",
    "--cov=infrastructure",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
branch = true
parallel = true
omit = [
    "tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
precision = 2
show_missing = true
